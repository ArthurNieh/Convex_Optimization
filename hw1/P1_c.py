import numpy as np
import cvxpy as cp

n = 5
m = 10
lambda_ = 1
beta = cp.Variable(n)

X = np.array([
    [-2.05285132, -0.0798365,  0.88811551, -0.31296891,  0.10815235],
    [-0.31591073, -0.1387073, -1.30701794, -0.63227706, -0.66792228],
    [ 0.3301553,  -0.95748847,  0.84747887, -0.58438193, -0.24445801],
    [-0.38815689, -1.31530838,  1.17174758,  0.43759445,  1.1907391],
    [ 0.67756632, -0.29914331, -0.5395671,  0.20478403, -0.87697091],
    [-0.05352987, -2.07222594, -0.41261809,  0.43838812, -0.67987968],
    [-0.56141173,  0.71125867, -0.97146703,  0.32358934,  0.14434927],
    [-0.09415079,  0.42187351, -0.43039491,  0.6580349, -0.18454576],
    [ 0.30693953,  1.17048685,  1.69235586,  0.56215282,  0.22329091],
    [-1.32795384, -1.15396708,  1.93912882, -0.67644897,  0.5756599]
]).T

Y = np.array([1, 1, 1, 0, 1, 1, 1, 0, 0, 0]).T

objective = cp.Minimize(
    cp.sum(cp.logistic(cp.multiply(-Y, (X.T @ beta))))/m + lambda_ * cp.square(cp.norm(beta, 2))
)
problem = cp.Problem(objective)
problem.solve()
print("Optimal value:", problem.value)
print("Optimal beta:", beta.value)